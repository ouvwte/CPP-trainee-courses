/*Разработать программу для реализации неориентированного графа:
1)      Сформировать ориентированный граф в виде массива вершин графа и списков смежности для каждой вершины.
2)      Найти ребро с максимальным весом.
3)      Найти вершину с максимальной степенью.
*/

#include <iostream>

using namespace std;

int main() {
    setlocale(LC_ALL, "rus");
    int i, j, max, n, m, x, y;
    
    //создал матрицу 6Х6
    int a[6][6] {
    {0,  1,   2,  3,  4,  5},
    {1,  0,  13,  0,  0,  9},
    {2, 13,   0, 19, 15, 11},
    {3,  0,  17,  0,  8,  0},
    {4,  0,  15,  8,  0,  2},
    {5,  9,  11,  0,  2,  0},
    };
    
    //вывод искомой матрицы
    cout << "Весовая матрица:";
    cout << endl;
    for (i = 0; i < 6; i++) {
        for (int j = 0; j < 6; j++)
            cout << a[i][j] << '\t';
        cout << endl;
    }
    
   //поиск ребра с максимальным весом 
    max = 0;
    for (i = 1; i <= 5; i++) {
        for (j = 1; j <= 5; j++) {
            if (a[i][j] > max) {
                max = a[i][j];
                x = i;
                y = j;
            }
        }
    }
    cout << "Ребро с максимальным весом: " << x + 1 << "->" << y + 1 << " " << max << endl;
    
    //поиск вершины с максимальной степенью
    int st = 0;
    int st1 = 0;
    n = 0, m = 0;
    for (i = 1; i <= 5; i++) {
        for (j = 1; j <= 5; j++) {
            if (a[i][j] > 0) {
                st += 1;
                n = i;
            }
        }
        if (st1 < st) {
            st1 = st;
            m = n;
        }
        st = 0;
    }
    cout << "Вершиной с наивысшей степенью является " << m << ", степень равна " << st1 << endl;
}